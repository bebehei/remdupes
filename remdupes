#!/usr/bin/env python3

# fdupes: remove only files from one subtree

import re
import argparse

# generate dupes.txt with:
# fdupes -rn folder1 folder2 folder2 ... > dupes.txt

# run program:
# ./remdupes.py | xargs -d '\n' rm


parser = argparse.ArgumentParser(description='List all duplicates, which match REGEX_KILL and have a duplicate in REGEX_STAY.'
                                            +' This perfect to remove the files of a foreign tree, which you already have.')

parser.add_argument('--in', dest='input', metavar='file', type=argparse.FileType('r'), default='dupes.txt',
                    help='Input file (default dupes.txt)')
parser.add_argument('REGEX_STAY',
                    help='regular expression of the folder, which has to contain the duplicate')
parser.add_argument('REGEX_KILL',
                    help='regular expression of the folder, where the duplicates will get removed')

args = parser.parse_args()

re_tree_stay = re.compile(args.REGEX_STAY)
re_tree_kill = re.compile(args.REGEX_KILL)

def contains_stay(dupes):
    for dupe in dupes:
        if re_tree_stay.match(dupe):
            return True
    return False

def return_kill(dupes):
    kills = []
    for dupe in dupes:
        if re_tree_kill.match(dupe):
            kills.append(dupe)
    return kills

def proc_dupes(dupes):
    kill_dupes = []
    if contains_stay(dupes):
        kill_dupes = return_kill(dupes)
    return kill_dupes

count = 0
dupes = []
for l in args.input.read().splitlines():

    if l is '':
        for i in proc_dupes(dupes):
            print(i)
        dupes = []
    else:
        dupes.append(l)
